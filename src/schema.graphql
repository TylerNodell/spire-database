type Query {
  info: String!
  buildings: [Building!]!
  building(id: Int!): Building
  agents: [Agent!]!
  agent(id: Int!): Agent
  units: [Unit!]!
  unit(id: Int): Unit
  owners: [Owner!]!
  owner(id:Int): Owner
  tenants: [Tenant!]!
  tenant(id:Int): Tenant
}

type Mutation {
  newBuilding(name: String! address: String!): Building!
  signup(email: String!, phone: String!, password: String!, name: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
  createListing(
    apt: String!, 
    sale: Boolean!, 
    buildingId: Int,
    ownerId: Int
  ): Unit
}

type Building {
  id: ID!
  name: String!
  address: String!
  units: [Unit]
}

type Unit {
  id: ID!
  apt: String!
  sale: Boolean!
  building: Building!
  agent: [Agent]
  owner: [Owner]
  tenant: Tenant
  pets: Boolean
  dogBreed: String
  storageL: Boolean
  storageB: Boolean
  advertisement: String
  floorplan: String
  sqft: Float
  purchasePrice: Float
  insurance:     String
  tenantInsurance: String
}

type AuthPayload {
  token: String
  agent: Agent
}

type Agent {
  id: ID!
  name: String!
  phone: String!
  email: String!
  units: [Unit]
  altPhone: String
}

type Owner {
  id: ID!
  name: String!
  phone: String
  email: String
  units: [Unit]
}

type Tenant {
  id: ID!
  name: String!
  phone: String
  email: String
  unit: Unit
}